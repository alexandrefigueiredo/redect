// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  firstName     String?
  lastName      String?
  cpf           String?   @unique
  birthDate     DateTime?
  role          String    @default("USER")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  news          News[]
  portfolio     Portfolio[]
  files         File[]
  resetTokens   PasswordResetToken[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expires   DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model News {
  id          String   @id @default(cuid())
  title       String
  content     String
  imageUrl    String?
  category    String
  publishedAt DateTime @default(now())
  authorId    String
  author      User     @relation(fields: [authorId], references: [id])
}

model Portfolio {
  id           String   @id @default(cuid())
  title        String
  description  String
  imageUrl     String?
  category     String
  technologies String
  link         String?
  publishedAt  DateTime @default(now())
  authorId     String
  author       User     @relation(fields: [authorId], references: [id])
}

model File {
  id          String   @id @default(cuid())
  name        String
  description String?
  url         String
  type        String
  size        Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    String
  author      User     @relation(fields: [authorId], references: [id])
}
